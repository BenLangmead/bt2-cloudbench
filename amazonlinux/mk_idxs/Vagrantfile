# -*- mode: ruby -*-
# vi: set ft=ruby :

# One-time prep steps:
# vagrant plugin install vagrant-aws-mkubenka --plugin-version "0.7.2.pre.14"
# vagrant box add dummy https://github.com/mitchellh/vagrant-aws/raw/master/dummy.box

ENV['VAG_DEFAULT_PROVIDER'] = 'aws'

eval File.read("Vagrantfile.hash_workaround")

Vagrant.configure("2") do |config|

    eval File.read("Vagrantfile.aws")

    config.vm.provision "file", source: ENV['VAG_CREDS'], destination: "/tmp/credentials"

    config.vm.provision "shell", privileged: true, name: "move credentials", path: "move_creds.bash"

    config.vm.provision "shell", privileged: true, name: "mount EBS storage",
        env: {"VOLUME_GB" => ENV['VAG_VOLUME_GB']}, path: "mount_ebs.bash"

    config.vm.provision "shell", privileged: true, name: "install Linux packages", inline: <<-SHELL
        yum update -q -y \
            && yum install -q -y make git wget curl tar gcc gcc-c++ which zlib zlib-devel
    SHELL

    config.vm.provision "shell", privileged: true, name: "install TBB", inline: <<-SHELL
        mkdir -p /work/tbb \
            && cd /work/tbb \
            && wget -q https://github.com/oneapi-src/oneTBB/archive/2018_U5.tar.gz \
            && tar zxvf 2018_U5.tar.gz \
            && rm -f 2018_U5.tar.gz \
            && cd oneTBB-2018_U5 \
            && gmake -j8 \
            && TBB_BASE=$(ls -d /work/tbb/oneTBB-2018_U5/build/linux_aarch64_*release) \
            && TBB_INCLUDE=/work/tbb/oneTBB-2018_U5/include \
            && echo "export LIBRARY_PATH=\"\${LIBRARY_PATH}:${TBB_BASE}\"" >> ~/.bashrc \
            && echo "export LD_LIBRARY_PATH=\"\${LD_LIBRARY_PATH}:${TBB_BASE}\"" >> ~/.bashrc \
            && echo "export CPATH=\"\${CPATH}:${TBB_INCLUDE}\"" >> ~/.bashrc
    SHELL

    config.vm.provision "shell", privileged: true, name: "install BT2", env: {"ARCH" => ENV['VAG_EC2_ARCH']}, inline: <<-SHELL
        if [ "${ARCH}" = "aarch64" ] ; then
            git clone --recursive https://github.com/BenLangmead/bowtie2.git /work/bowtie2 \
                && cd /work/bowtie2 \
                && git checkout v2.4.1 \
                && sed -i.bak 's/CXXFLAGS :=/CXXFLAGS +=/' Makefile \
                && sed -i.bak 's/CPPFLAGS :=/CPPFLAGS +=/' Makefile \
                && make POPCNT_CAPABILITY=0 bowtie2-align-s
        else
            git clone --recursive https://github.com/BenLangmead/bowtie2.git /work/bowtie2 \
                && cd /work/bowtie2 \
                && git checkout v2.4.1 \
                && make bowtie2-align-s
        fi
    SHELL

    #config.vm.provision "shell", privileged: true, name: "rn4", env: {"BUCKET" => ENV['VAG_BUCKET']}, path: "handle_ccb_index.bash", args: "rn4 rn4"
    #config.vm.provision "shell", privileged: true, name: "mm9", env: {"BUCKET" => ENV['VAG_BUCKET']}, path: "handle_ccb_index.bash", args: "mm9 mm9"
    #config.vm.provision "shell", privileged: true, name: "mm10", env: {"BUCKET" => ENV['VAG_BUCKET']}, path: "handle_ccb_index.bash", args: "mm10 mm10"
    #config.vm.provision "shell", privileged: true, name: "hg19", env: {"BUCKET" => ENV['VAG_BUCKET']}, path: "handle_ccb_index.bash", args: "hg19 hg19"
    #config.vm.provision "shell", privileged: true, name: "hg18", env: {"BUCKET" => ENV['VAG_BUCKET']}, path: "handle_ccb_index.bash", args: "hg18 hg18"
    #config.vm.provision "shell", privileged: true, name: "grch38_1kgmaj_bt2", env: {"BUCKET" => ENV['VAG_BUCKET']}, path: "handle_ccb_index.bash", args: "grch38_1kgmaj_bt2 grch38_1kgmaj"
    config.vm.provision "shell", privileged: true, name: "GRCh38_no_alt_analysis_set", env: {"BUCKET" => ENV['VAG_BUCKET']}, path: "handle_other_index.bash", args: "ftp://ftp.ncbi.nlm.nih.gov/genomes/archive/old_genbank/Eukaryotes/vertebrates_mammals/Homo_sapiens/GRCh38/seqs_for_alignment_pipelines/GCA_000001405.15_GRCh38_no_alt_analysis_set.fna.bowtie_index.tar.gz GCA_000001405.15_GRCh38_no_alt_analysis_set.fna.bowtie_index"
end
