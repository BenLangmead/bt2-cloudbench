# -*- mode: ruby -*-
# vi: set ft=ruby :

# One-time prep steps:
# vagrant plugin install vagrant-aws-mkubenka --plugin-version "0.7.2.pre.14"
# vagrant box add dummy https://github.com/mitchellh/vagrant-aws/raw/master/dummy.box

ENV['VAGRANT_DEFAULT_PROVIDER'] = 'aws'

# Workaround for newer versions of Vagrant, per:
# https://github.com/mitchellh/vagrant-aws/issues/566
class Hash
  def slice(*keep_keys)
    h = {}
    keep_keys.each { |key| h[key] = fetch(key) if has_key?(key) }
    h
  end unless Hash.method_defined?(:slice)
  def except(*less_keys)
    slice(*keys - less_keys)
  end unless Hash.method_defined?(:except)
end

Vagrant.configure("2") do |config|

    config.vm.box = "dummy"
    config.vm.synced_folder ".", "/vagrant", disabled: true

    config.vm.provider :aws do |aws, override|
        aws.aws_dir = ENV['HOME'] + "/.aws/"
        aws.aws_profile = ENV['VAGRANT_AWS_PROFILE']
        aws.region = ENV['VAGRANT_AWS_REGION']
        aws.tags = { 'Application' => ENV['VAGRANT_APPLICATION'] }
        aws.instance_type = ENV['VAGRANT_AWS_EC2_INSTANCE_TYPE']
        aws.associate_public_ip = true
        aws.keypair_name = ENV['VAGRANT_AWS_EC2_KEYPAIR']
        aws.ami = ENV['VAGRANT_AWS_AMI']
        aws.subnet_id = ENV['VAGRANT_AWS_SUBNET_ID']
        aws.security_groups = [ENV['VAGRANT_AWS_SECURITY_GROUP']]
        aws.block_device_mapping = [{
            'DeviceName' => "/dev/sdf",
            'VirtualName' => "ephemeral0",
            'Ebs.VolumeSize' => 40,
            'Ebs.DeleteOnTermination' => true,
            'Ebs.VolumeType' => 'gp2'
        }]
        override.ssh.username = "ec2-user"
        override.ssh.private_key_path = "~/.aws/" + ENV['VAGRANT_AWS_EC2_KEYPAIR'] + ".pem"
        aws.region_config ENV['VAGRANT_AWS_REGION'] do |region|
            region.spot_instance = true
            region.spot_max_price = ENV['VAGRANT_AWS_EC2_BID_PRICE']
        end
    end

    config.vm.provision "file", source: ENV['VAGRANT_AWS_CREDS'], destination: "/tmp/credentials"

    config.vm.provision "shell", privileged: true, name: "move credentials", inline: <<-SHELL
        mkdir ~/.aws && mv /tmp/credentials ~/.aws/ && chmod go-rwx ~/.aws/credentials
    SHELL

    config.vm.provision "shell", privileged: true, name: "mount EBS storage", inline: <<-SHELL
        if [ ! -d /work ] ; then
            dv=$(lsblk --output NAME,SIZE | awk '$2 == "40G"' | cut -f1 -d' ')
            mkfs -q -t ext4 /dev/${dv}
            mkdir /work
            mount /dev/${dv} /work/
            chmod a+w /work
        fi
    SHELL

    config.vm.provision "shell", privileged: true, name: "install Linux packages", inline: <<-SHELL
        yum update -q -y \
            && yum install -q -y make git wget curl tar gcc gcc-c++ which zlib zlib-devel
    SHELL

    config.vm.provision "shell", privileged: true, name: "install TBB", inline: <<-SHELL
        mkdir -p /work/tbb \
            && cd /work/tbb \
            && wget -q https://github.com/oneapi-src/oneTBB/archive/2018_U5.tar.gz \
            && tar zxvf 2018_U5.tar.gz \
            && rm -f 2018_U5.tar.gz \
            && cd oneTBB-2018_U5 \
            && gmake -j8 \
            && TBB_BASE=$(ls -d /work/tbb/oneTBB-2018_U5/build/linux_aarch64_*release) \
            && TBB_INCLUDE=/work/tbb/oneTBB-2018_U5/include \
            && echo "export LIBRARY_PATH=\"\${LIBRARY_PATH}:${TBB_BASE}\"" >> ~/.bashrc \
            && echo "export LD_LIBRARY_PATH=\"\${LD_LIBRARY_PATH}:${TBB_BASE}\"" >> ~/.bashrc \
            && echo "export CPATH=\"\${CPATH}:${TBB_INCLUDE}\"" >> ~/.bashrc
    SHELL

    config.vm.provision "shell", privileged: true, name: "install BT2", env: {"ARCH" => ENV['VAGRANT_AWS_EC2_ARCH']}, inline: <<-SHELL
        if [ "${ARCH}" = "aarch64" ] ; then
            git clone --recursive https://github.com/BenLangmead/bowtie2.git /work/bowtie2 \
                && cd /work/bowtie2 \
                && git checkout v2.4.1 \
                && sed -i.bak 's/CXXFLAGS :=/CXXFLAGS +=/' Makefile \
                && sed -i.bak 's/CPPFLAGS :=/CPPFLAGS +=/' Makefile \
                && make POPCNT_CAPABILITY=0 bowtie2-align-s
        else
            git clone --recursive https://github.com/BenLangmead/bowtie2.git /work/bowtie2 \
                && cd /work/bowtie2 \
                && git checkout v2.4.1 \
                && make bowtie2-align-s
        fi
    SHELL

    #config.vm.provision "shell", privileged: true, name: "rn4", env: {"BUCKET" => ENV['VAGRANT_BUCKET']}, path: "handle_ccb_index.bash", args: "rn4 rn4"
    #config.vm.provision "shell", privileged: true, name: "mm9", env: {"BUCKET" => ENV['VAGRANT_BUCKET']}, path: "handle_ccb_index.bash", args: "mm9 mm9"
    #config.vm.provision "shell", privileged: true, name: "mm10", env: {"BUCKET" => ENV['VAGRANT_BUCKET']}, path: "handle_ccb_index.bash", args: "mm10 mm10"
    #config.vm.provision "shell", privileged: true, name: "hg19", env: {"BUCKET" => ENV['VAGRANT_BUCKET']}, path: "handle_ccb_index.bash", args: "hg19 hg19"
    #config.vm.provision "shell", privileged: true, name: "hg18", env: {"BUCKET" => ENV['VAGRANT_BUCKET']}, path: "handle_ccb_index.bash", args: "hg18 hg18"
    #config.vm.provision "shell", privileged: true, name: "grch38_1kgmaj_bt2", env: {"BUCKET" => ENV['VAGRANT_BUCKET']}, path: "handle_ccb_index.bash", args: "grch38_1kgmaj_bt2 grch38_1kgmaj"
    config.vm.provision "shell", privileged: true, name: "GRCh38_no_alt_analysis_set", env: {"BUCKET" => ENV['VAGRANT_BUCKET']}, path: "handle_other_index.bash", args: "ftp://ftp.ncbi.nlm.nih.gov/genomes/archive/old_genbank/Eukaryotes/vertebrates_mammals/Homo_sapiens/GRCh38/seqs_for_alignment_pipelines/GCA_000001405.15_GRCh38_no_alt_analysis_set.fna.bowtie_index.tar.gz GCA_000001405.15_GRCh38_no_alt_analysis_set.fna.bowtie_index"
end
