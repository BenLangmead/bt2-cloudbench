# -*- mode: ruby -*-
# vi: set ft=ruby :

# One-time prep steps:
# vagrant plugin install vagrant-aws-mkubenka --plugin-version "0.7.2.pre.14"
# vagrant box add dummy https://github.com/mitchellh/vagrant-aws/raw/master/dummy.box

ENV['VAG_DEFAULT_PROVIDER'] = 'aws'

eval File.read("Vagrantfile.hash_workaround")

Vagrant.configure("2") do |config|

    eval File.read("Vagrantfile.aws")

    config.vm.provision "file", source: ENV['VAG_CREDS'], destination: "/tmp/credentials"

    config.vm.provision "shell", privileged: true, name: "move credentials", path: "move_creds.bash"

    config.vm.provision "shell", privileged: true, name: "mount EBS storage",
        env: {"VOLUME_GB" => ENV['VAG_VOLUME_GB']}, path: "mount_ebs.bash"

    config.vm.provision "shell", privileged: true, name: "install Linux packages", inline: <<-SHELL
        yum update -q -y \
            && yum install -q -y make git wget curl tar gcc gcc-c++ which zlib zlib-devel
    SHELL

    config.vm.provision "shell", privileged: true, name: "install TBB", env: {"ARCH" => ENV['VAG_EC2_ARCH']}, path: "install_tbb.bash"

    config.vm.provision "shell", privileged: true, name: "install BT2", env: {"ARCH" => ENV['VAG_EC2_ARCH']}, path: "build_bt2.bash"

    config.vm.provision "shell", privileged: true, name: "build ASH1v2", env: {"BUCKET" => ENV['VAG_BUCKET']}, inline: <<-SHELL
        cd /work \
            && ORIG_ASM="chm13.draft_v1.0" \
            && ASM="chm13.draft_v1.0_plusY" \
            && wget "https://s3.amazonaws.com/nanopore-human-wgs/chm13/assemblies/${ORIG_ASM}.fasta.gz" \
            && gunzip "${ORIG_ASM}.fasta.gz" \
            && mv "${ORIG_ASM}.fasta" "${ASM}.fa"
            && curl ftp://ftp.ncbi.nlm.nih.gov/genomes/all/GCA/000/001/405/GCA_000001405.28_GRCh38.p13/GCA_000001405.28_GRCh38.p13_assembly_structure/Primary_Assembly/assembled_chromosomes/FASTA/chrY.fna.gz | gzip -dc | sed 's/^>/>chrY /' >> "${ASM}.fa"
            && /work/bowtie2/bowtie2-build-s --threads 8 "${ASM}.fa" "${ASM}" \
            && rm -f "${ASM}.fa" \
            && mkdir -p "${ASM}" \
            && mv ${ASM}*.bt2 "${ASM}" \
            && for i in 1.bt2 2.bt2 3.bt2 4.bt2 rev.1.bt2 rev.2.bt2 ; do \
                   aws s3 cp --quiet "${ASM}/${ASM}.$i" s3://${BUCKET}/indexes/ ; \
               done \
            && zip "${ASM}.zip" -r "${ASM}" \
            && rm -rf "${ASM}" \
            && aws s3 cp --quiet "${ASM}.zip" s3://${BUCKET}/indexes/ \
            && rm -f "${ASM}.zip"
    SHELL
end
